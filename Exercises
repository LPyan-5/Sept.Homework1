//Exercise 1
Insert a number. Print ‘yes’ if the number is prime, ‘no’ otherwise.

function isPrime(num){
    
if(!isFinite(num)||isNaN(num)||num<=1||typeof num!=='number'){
    console.log('no');
    return;
}


        if(num===2){
            console.log('yes');
            return;
        }
        else
        {
            for(let i=2; i<num/2; i++){
                if(num%i===0){
                    console.log('no');
                    return;
                }
            }
        
    }
    
    console.log('yes');
    
}
isPrime('a');
isPrime(19);
isPrime(25);


//Exercise 2
Write a program, to calculate the value of the following sequence:
1 - 1/3 + 1/5 - 1/7 + 1/9 + ….. + (-1k)* 1/n .

function calcSeries(n){
    if(n>0&&!isNaN(n)&&isFinite(n)){
    let s=0;
    let k=-1;
    for(let i=1;i<=n; i++){
        k*=-1;
        s+=k/(2*i-1);
    }
    console.log(s);
}
else{
    console.log('Cannot calculate(.');
}
}
calcSeries(10);


//Exercise 3
Given an array consisting from the arrays of numbers (like a two-dimensional array). 
Find sum of each row and print them as an array.

function rowSum(arr){
    let newArr=[];
    for(let i=0; i<arr.length;i++){
        let sum=0;
        for(let j=0; j<arr[i].length;j++){
        sum+=arr[i][j];
    }
    newArr.push(sum);
}
console.log(newArr);
}
rowSum([[-2,3],[1],[2,-5,6]]);


//Exercise 4
Print the following pattern.

function printRectangle(a,b){
    if(a<=0||b<=0){
        console.log('Please enter positives.');
        return;
    }
    let top='';
    let space=' ';
    for(let i=1;i<=b;i++){
        if(i===b){
            top+='*';
            }      
          else{
    top+="*"+space;
          }
    }
    let arr=[top];
    for (let i = 0; i<a-1; i++) {
        if(i===a-2){
            arr.push(top);
        }
        else{
        let str = "*"+space.repeat(2*b-3)+"*"+space.repeat(i);
        arr.push(str);
        }
       
           }
        let s = '';
        for(let key of arr){
        s += key + '\n';
        }
        console.log(s);
}
printRectangle(5,8);


//Exercise 5
Write a function to compute a new string from the given one by moving the first char to come after
the next two chars, so "abc" yields "bca". Repeat this process for each subsequent group of 3 chars. 
Ignore any group of fewer than 3 chars at the end.

function change(str){
    if(str.length===0){
        console.log('Empty string(.');
        return;
    }
    let s='';
    for(let i=0; i<str.length;i+=3){
        if (str.substr(i).length<3){
            s+=str.substr(i);
            break;
        }
        s+=str[i+1]+str[i+2]+str[i];
    }
    console.log(s);
}
change('abcdefaj');
change('aweyoolp');
change('');


//Exercise 6
Print the following number pattern:

function numPattern(n){
    let k=0;
    let space=' ';
    for(let i=0;i<n;i++){
        let str='';
        for(let j=0;j<=i;j++){
            str+=k+1+space;
            k++;
      }
      console.log(str);
  }
}
numPattern(5);












